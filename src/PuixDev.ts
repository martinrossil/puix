import ApplicationElement from './containers/ApplicationElement';
import Theme from './design/Theme';
import Color from './design/Color';
import AnchorLayout from './layouts/AnchorLayout';
import IDisplayElement from './interfaces/IDisplayElement';
import DisplayElement from './core/DisplayElement';
import IDisplayContainer from './interfaces/IDisplayContainer';
import DisplayContainer from './containers/DisplayContainer';
import HorizontalLayout from './layouts/HorizontalLayout';
import VerticalAlign from './consts/VerticalAlign';

export default class PuixDev extends ApplicationElement {
    public constructor() {
        super();
        Theme.NEUTRAL_COLOR = new Color(217, 10);
        Theme.PRIMARY_COLOR = new Color(234);
        this.backgroundColor = Theme.NEUTRAL_COLOR.index[0];
        this.name = 'PuixDev';
        this.layout = new AnchorLayout();
        this.layout.padding = 20;
        /* const vdc: IDisplayContainer = new DisplayContainer();
        vdc.backgroundColor = Color.WHITE;
        vdc.z = 2;
        vdc.layout = new VerticalLayout();
        vdc.layout.padding = 20;
        vdc.layout.verticalGap = 20;
        vdc.layout.horizontalAlign = HorizontalAlign.CENTER;
        vdc.percentWidth = 100;
        vdc.percentHeight = 100;
        // vdc.explicitWidth = 400;
        // vdc.explicitHeight = 500;
        // vdc.horizontalCenter = vdc.verticalCenter = 0;
        const d1: IDisplayElement = new DisplayElement();
        d1.backgroundColor = 'red';
        d1.setSize(300, 100);
        const d2: IDisplayElement = new DisplayElement();
        d2.backgroundColor = 'green';
        // d2.setSize(200, 100);
        d2.width = 200;
        d2.percentHeight = 50;
        const d3: IDisplayElement = new DisplayElement();
        d3.backgroundColor = 'blue';
        d3.percentWidth = 50;
        d3.height = 100;
        const d4: IDisplayElement = new DisplayElement();
        d4.backgroundColor = 'yellow';
        d4.height = 100;
        // d4.percentHeight = 75;
        d4.percentWidth = 75;
        // vdc.addElements([d1, d2, d3, d4]);
        // this.addElement(vdc); */
        const hdc: IDisplayContainer = new DisplayContainer();
        hdc.backgroundColor = Color.WHITE;
        hdc.z = 2;
        hdc.layout = new HorizontalLayout();
        hdc.layout.padding = 10;
        hdc.layout.horizontalGap = 10;
        hdc.layout.verticalAlign = VerticalAlign.MIDDLE;
        // hdc.explicitHeight = 200;
        // hdc.explicitWidth = 300;
        hdc.percentWidth = 100;
        hdc.percentHeight = 100;
        hdc.horizontalCenter = hdc.verticalCenter = 0;
        // hdc.left = hdc.right = 10;
        // hdc.top = hdc.bottom = 10;
        // hdc.layout.verticalAlign = VerticalAlign.FILL;
        const d1: IDisplayElement = new DisplayElement();
        d1.backgroundColor = 'red';
        d1.percentWidth = 100;
        d1.percentHeight = 25;
        // d1.setSize(100, 200);
        // d1.top = d1.right = d1.bottom = d1.left = 10;
        // d1.percentWidth = 50;
        // d1.percentHeight = 50;
        const d2: IDisplayElement = new DisplayElement();
        d2.backgroundColor = 'green';
        // d2.setSize(100, 150);
        // d2.explicitWidth = 100;
        // d2.top = d2.right = d2.bottom = d2.left = 10;
        // d2.setSize(100, 100);
        d2.percentWidth = 50;
        d2.percentHeight = 75;
        const d3: IDisplayElement = new DisplayElement();
        d3.backgroundColor = 'blue';
        // d3.percentWidth = 25;
        // d3.percentHeight = 50;
        d3.setSize(100, 100);
        // d3.width = 100;
        // d3.percentHeight = 50;
        // hdc.addElements([d1, d2]);
        // this.addElement(hdc);
        this.addElements([d1]);
    }
}
customElements.define('puix-dev', PuixDev);
